---
title: "Untitled"
format: 
  typst:
    # fontsize: "24pt"
    margin: 
      x: 1cm
      y: 1cm
  
execute:
  echo: false
---

```{r setup}
#| echo: false
#| message: false
#| warning: false
library(tidyverse)
library(NHANES)
library(cowplot)
library(ggplot2)
library(gganimate)
library(hrbrthemes)
library(gridExtra)
library(httr)
library(lubridate)
library(labelled)
library(geomtextpath)
library(kableExtra)
library(flextable)

ai_jobs_url <- GET("https://www.kaggle.com/api/v1/datasets/download/uom190346a/ai-powered-job-market-insights")
temp <- tempfile()
download.file(ai_jobs_url$url, temp)
ai_jobs <- read_csv(unz(temp, "ai_job_market_insights.csv"))
unlink(temp)
ai_jobs <- ai_jobs |>
  janitor::clean_names() |>
  mutate(
    job_title = factor(job_title),
    industry = factor(industry),
    company_size = factor(company_size, levels = c("Small", "Medium", "Large"), ordered = TRUE),
    location = factor(location),
    ai_adoption_level = factor(ai_adoption_level, levels = c("Low", "Medium", "High"), ordered = TRUE),
    automation_risk = factor(automation_risk, levels = c("Low", "Medium", "High"), ordered = TRUE),
    required_skills = factor(required_skills),
    remote_friendly = factor(remote_friendly),
    job_growth_projection = factor(job_growth_projection, levels = c("Decline", "Stable", "Growth"), ordered = TRUE)
  ) |>
  set_variable_labels(
    job_title = "Title of the job role",
    industry = "Industry in which the job is located",
    company_size = "Size of the company offering the job",
    location = "Geographic location of the job",
    ai_adoption_level = "Extent to which the company has adopted AI in its operations",
    automation_risk = "Estimated risk that the job could be automated within the next 10 years",
    required_skills = "Key skills required for the job role",
    salary_usd = "Annual salary offered for the job in USD",
    remote_friendly = "Indicates whether the job can be performed remotely",
    job_growth_projection = "Projected growth or decline of the job role over the next five years"
  ) |>
  mutate(salary_usd = case_when(
    job_title == "HR Manager" ~ salary_usd - 15000,
    job_title == "Marketing Specialist" ~ salary_usd - 20000,
    job_title == "Software Engineer" ~ salary_usd - 10000,
    job_title == "UX Designer" ~ salary_usd - 25000,
    job_title == "Sales Manager" ~ salary_usd - 10000,
    job_title == "AI Researcher" ~ salary_usd + 30000,
    job_title == "Data Scientist" ~ salary_usd + 10000,
    .default = salary_usd
  )) |>
  rowwise() |>
  mutate(automation_risk = case_when(
    job_title == "HR Manager" ~ sample(c("Low", "Medium", "High"), 1, replace = TRUE, prob = c(0.2, 0.4, 0.6)),
    job_title == "Marketing Specialist" ~ sample(c("Low", "Medium", "High"), 1, replace = TRUE, prob = c(0, 0.1, 0.9)),
    job_title == "Software Engineer" ~ sample(c("Low", "Medium", "High"), 1, replace = TRUE, prob = c(0.1, 0.1, 0.8)),
    job_title == "UX Designer" ~ sample(c("Low", "Medium", "High"), 1, replace = TRUE, prob = c(0.3, 0.2, 0.5)),
    job_title == "Sales Manager" ~ sample(c("Low", "Medium", "High"), 1, replace = TRUE, prob = c(0.1, 0.3, 0.6)),
    job_title == "AI Researcher" ~ sample(c("Low", "Medium", "High"), 1, replace = TRUE, prob = c(0.9, 0.1, 0.0)),
    .default = automation_risk
  )) |>
  ungroup()
```

`#show figure: set block(breakable: true)`{=typst}

```{r results='asis'}
#| echo: false


create_tables <- function(data, auto_risk) {
  high_risk <- data |> 
  filter(automation_risk == auto_risk) |>
  pull(salary_usd) |>
  signif(3) / 1000
  
  high_risk <- paste0("$", as.character(high_risk), "k")
  
  offset <- 1
  num_rows <- 7
  
  tables <- c()
  
  for (i in 1:4) {
    high_risk_table <- tibble(
        x = high_risk[offset:(offset+num_rows)],
        y = high_risk[(offset+num_rows):(offset+(2*num_rows))],
        z = high_risk[(offset + (2*num_rows)):(offset + (3*num_rows))],
        a = high_risk[(offset + (3*num_rows)):(offset + (4*num_rows))],
      )
    offset <- 4 * num_rows
    
    set_flextable_defaults(
      font.size=40,
      padding = 40,
    )
    
    tables[[i]] <- high_risk_table
  }
  
  tables
}


high_risk_tables <- create_tables(ai_jobs, "High")
med_risk_tables <- create_tables(ai_jobs, "Medium")
low_risk_tables <- create_tables(ai_jobs, "Low")


```

## High Risk

```{r}
flextable(data.frame(high_risk_tables[1]))
```

```{r}
flextable(data.frame(high_risk_tables[2]))
```

```{r}
flextable(data.frame(high_risk_tables[3]))
```

```{r}
flextable(data.frame(high_risk_tables[4]))
```

## Medium Risk

```{r}
flextable(data.frame(med_risk_tables[1]))
```

```{r}
flextable(data.frame(med_risk_tables[2]))
```

```{r}
flextable(data.frame(med_risk_tables[3]))
```

```{r}
flextable(data.frame(med_risk_tables[4]))
```

## Low Risk

```{r}
flextable(data.frame(low_risk_tables[1]))
```

```{r}
flextable(data.frame(low_risk_tables[2]))
```

```{r}
flextable(data.frame(low_risk_tables[3]))
```

```{r}
flextable(data.frame(low_risk_tables[4]))
```

