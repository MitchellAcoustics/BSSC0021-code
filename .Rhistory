# sample_4 <- c(..., ..., ..., ...)
sample_1
sample_2
mean(sample_1)
sum(sample_1) / length(sample_1)
mean_1 <- mean(sample_1)
mean_2 <- mean(sample_2)
mean_3 <- mean(sample_3)
mean_1
means <- c(mean_1, mean_2, mean_3)
means
data <- tibble(sample_1, sample_2, sample_3)
data
data <- tibble(sample_1, sample_2, sample_3) |>
gather(key = "sample", value = "value")
data
data <- tibble(sample_1, sample_2, sample_3) |>
gather(key = "sample", value = "value")
source("~/Documents/UCL/Teaching/BSSC0021_25/Code/Week4/sampling-exercise.R", echo=TRUE)
library(tidyverse)
# Input the values of the samples
sample_1 <- c(83.2, 82.6, 82.6, 82.6, 93.2, 94, 94, 48.5, 33.6, 33.6)
sample_2 <- c(88, 48, 23, 23, 23, 23, 23, 23, 23, 23)
sample_3 <- c(83.2, 82.6, 82.6, 99, 100, 145, 123, 222, 111, 111)
# sample_4 <- c(..., ..., ..., ...)
# ... and so on
# Create a table with the samples and an id column
data <- tibble(sample_1, sample_2, sample_3) |>
gather(key = "sample", value = "value")
data # Look at the table
source("~/Documents/UCL/Teaching/BSSC0021_25/Code/Week4/sampling-exercise.R", echo=TRUE)
data
data <- tibble(sample_1, sample_2, sample_3) |>
gather(key = "sample", value = "value")
data # Look at the table
sample_means
sample_means <- data |>
group_by(sample) |>
summarise(mean = mean(value))
sample_means # Look at the means
source("~/Documents/UCL/Teaching/BSSC0021_25/Code/Week4/sampling-exercise.R", echo=TRUE)
renv::status()
renv::snapshot()
quarto render --profile full_site
quarto render --profile full-site
quarto render
library(tidyverse)
library(tidymodels)
data <- read_csv("data/buildings-data/train.csv")
glimpse(data)
library(gtExtras)
library(gtsummary)
library(tidyverse)
library(tidymodels)
data <- read_csv("data/buildings-data/train.csv")
tbl_summary(data)
library(gtExtras)
library(gtsummary)
library(tidyverse)
library(tidymodels)
data <- read_csv("data/buildings-data/train.csv")
data |> gt_preview() |>
tab_header(title = "Building Energy Dataset")
library(gtExtras)
library(gtsummary)
library(tidyverse)
library(tidymodels)
data <- read_csv("data/buildings-data/train.csv")
data |> gt_preview() |>
tab_header(title = "Building Energy Dataset")
View(data)
data <- data |>
janitor::clean_names() |>
mutate(
state_factor = factor(state_factor),
building_class = factor(building_class),
facility_type = factor(facility_type)
)
data |> gt_preview() |>
tab_header(title = "Building Energy Dataset")
?labelled
library(labelled)
?labelled
data |>
ggplot(mapping = aes(x=site_eui)) |>
geom_histogram()
data |>
ggplot(mapping = aes(x=site_eui)) +
geom_histogram()
data |>
ggplot(mapping = aes(x=site_eui)) +
geom_density()
data <- data |>
janitor::clean_names() |>
mutate(
state_factor = factor(state_factor),
building_class = factor(building_class),
facility_type = factor(facility_type),
log_site_eui = log(site_eui)
)
data |> gt_preview() |>
tab_header(title = "Building Energy Dataset")
data |>
ggplot(mapping = aes(x=log_site_eui)) +
geom_density()
corr(log_site_eui ~ facility_type, data=data)
cor(log_site_eui ~ facility_type, data=data)
?cor
cor(x=data$facility_type, y=data$log_site_eui, method="spearman")
regression(x=data$facility_type, y=data$log_site_eui)
lm(x=data$facility_type, y=data$log_site_eui)
lm(log_site_eui ~ facility_type, data=data)
res <- lm(log_site_eui ~ facility_type, data=data)
summary(res)
data <- data |>
janitor::clean_names() |>
mutate(
state_factor = factor(state_factor),
building_class = factor(building_class),
facility_type = factor(facility_type),
year_build = factor(year_built, ordered=TRUE)
log_site_eui = log(site_eui)
data <- data |>
janitor::clean_names() |>
mutate(
state_factor = factor(state_factor),
building_class = factor(building_class),
facility_type = factor(facility_type),
year_build = factor(year_built, ordered=TRUE),
log_site_eui = log(site_eui)
)
data |> gt_preview() |>
tab_header(title = "Building Energy Dataset")
data |>
ggplot(mapping = aes(x=log_site_eui)) +
geom_density()
res <- lm(log_site_eui ~ facility_type*year_built, data=data)
summary(res)
res <- lm(log_site_eui ~ facility_type + year_built, data=data)
summary(res)
res <- lm(log_site_eui ~ facility_type + year_built + energy_star_rating, data=data)
summary(res)
data <- data |>
janitor::clean_names() |>
mutate(
state_factor = factor(state_factor),
building_class = factor(building_class),
facility_type = factor(facility_type),
year_built = factor(year_built, ordered=TRUE),
log_site_eui = log(site_eui)
)
data |> gt_preview() |>
tab_header(title = "Building Energy Dataset")
res <- lm(log_site_eui ~ facility_type*year_built, data=data)
res <- lm(log_site_eui ~ facility_type + year_built, data=data)
res <- lm(log_site_eui ~ facility_type + year_built + energy_star_rating, data=data)
res <- lm(log_site_eui ~ facility_type + energy_star_rating, data=data)
summary(res)
data <- data |>
janitor::clean_names() |>
mutate(
state_factor = factor(state_factor),
building_class = factor(building_class),
facility_type = factor(facility_type),
year_built = factor(year_built, ordered=TRUE),
energy_star_rating = factor(energy_star_rating, ordered=TRUE)
log_site_eui = log(site_eui)
data <- data |>
janitor::clean_names() |>
mutate(
state_factor = factor(state_factor),
building_class = factor(building_class),
facility_type = factor(facility_type),
year_built = factor(year_built, ordered=TRUE),
energy_star_rating = factor(energy_star_rating, ordered=TRUE),
log_site_eui = log(site_eui)
)
data |> gt_preview() |>
tab_header(title = "Building Energy Dataset")
res <- lm(log_site_eui ~ facility_type + energy_star_rating, data=data)
res <- lm(site_eui ~ facility_type + energy_star_rating, data=data)
res <- lm(log_site_eui ~ facility_type, data=data)
summary(res)
res <- lm(site_eui ~ facility_type, data=data)
summary(res)
install.packages('r4ds.tutorial')
source("~/Documents/UCL/Teaching/BSSC0021_25/Code/Week4/sampling-exercise.R", echo=TRUE)
ai_jobs_file <- "data/ai_jobs.csv"
ai_jobs <- read_csv(ai_jobs_file)
setwd("~/Documents/UCL/Teaching/BSSC0021_25/Code/Week4")
ai_jobs_file <- "data/ai_jobs.csv"
ai_jobs <- read_csv(ai_jobs_file)
ai_jobs
ai_jobs |> sample(10)
ai_jobs |> sample(10)
ai_jobs |> sample(salary_usd, 10)
ai_jobs |> sample(10) |> pull(salary_usd)
ai_jobs |> sample_n(10) |> pull(salary_usd)
ai_jobs |> sample_n(10) |> pull(salary_usd) / 1000
ai_jobs |> sample_n(10) |> pull(salary_usd) / 1000 |> round(2)
sample_n(round(ai_jobs$salary_usd/1000, 2), 10)
round(sample_n(ai_jobs, 10) / 1000, 2)
ai_jobs |> sample_n(10) |> pull(salary_usd) / 1000 |> round()
ai_jobs |> sample_n(10) |> pull(salary_usd) / 1000
auto_risk
auto_risk <- "High"
high_risk <- ai_jobs |>
filter(automation_risk == auto_risk) |>
pull(salary_usd) |>
signif(3) / 1000
auto_risk <- "High"
high_risk <- ai_jobs |>
filter(automation_risk == auto_risk) |>
pull(salary_usd) |>
signif(3) / 1000
print(high_risk)
auto_risk <- "High"
high_risk <- ai_jobs |>
filter(automation_risk == auto_risk) |>
sample_n(10, replace = TRUE) |>
pull(salary_usd) |>
signif(3) / 1000
print(high_risk)
auto_risk <- "High"
high_risk <- ai_jobs |>
filter(automation_risk == auto_risk) |>
sample_n(10, replace = TRUE) |>
pull(salary_usd) |>
signif(3) / 1000
print(paste(high_risk, ", "))
auto_risk <- "High"
high_risk <- ai_jobs |>
filter(automation_risk == auto_risk) |>
sample_n(10, replace = TRUE) |>
pull(salary_usd) |>
signif(3) / 1000
print(paste0(high_risk, ", "))
auto_risk <- "High"
high_risk <- ai_jobs |>
filter(automation_risk == auto_risk) |>
sample_n(10, replace = TRUE) |>
pull(salary_usd) |>
signif(3) / 1000
print(as.character(high_risk, collapse=", "))
print(dput(high_risk))
auto_risk <- "High"
high_risk <- ai_jobs |>
filter(automation_risk == auto_risk) |>
sample_n(10, replace = TRUE) |>
pull(salary_usd) |>
signif(3) / 1000
print(dput(high_risk))
auto_risk <- "High"
high_risk <- ai_jobs |>
filter(automation_risk == auto_risk) |>
sample_n(10, replace = TRUE) |>
pull(salary_usd) |>
signif(3) / 1000
print(dput(high_risk))
auto_risk <- "High"
high_risk <- ai_jobs |>
filter(automation_risk == auto_risk) |>
sample_n(10, replace = TRUE) |>
pull(salary_usd) |>
signif(3) / 1000
print(dput(high_risk))
auto_risk <- "High"
high_risk <- ai_jobs |>
filter(automation_risk == auto_risk) |>
sample_n(10, replace = TRUE) |>
pull(salary_usd) |>
signif(3) / 1000
print(dput(high_risk))
auto_risk <- "High"
high_risk <- ai_jobs |>
filter(automation_risk == auto_risk) |>
sample_n(10, replace = TRUE) |>
pull(salary_usd) |>
signif(3) / 1000
print(dput(high_risk))
auto_risk <- "High"
high_risk <- ai_jobs |>
filter(automation_risk == auto_risk) |>
sample_n(10, replace = TRUE) |>
pull(salary_usd) |>
signif(3) / 1000
print(dput(high_risk))
auto_risk <- "High"
high_risk <- ai_jobs |>
filter(automation_risk == auto_risk) |>
sample_n(10, replace = TRUE) |>
pull(salary_usd) |>
signif(3) / 1000
print(dput(high_risk))
auto_risk <- "High"
high_risk <- ai_jobs |>
filter(automation_risk == auto_risk) |>
sample_n(10, replace = TRUE) |>
pull(salary_usd) |>
signif(3) / 1000
print(dput(high_risk))
auto_risk <- "High"
high_risk <- ai_jobs |>
filter(automation_risk == auto_risk) |>
sample_n(10, replace = TRUE) |>
pull(salary_usd) |>
signif(3) / 1000
print(dput(high_risk))
auto_risk <- "High"
high_risk <- ai_jobs |>
filter(automation_risk == auto_risk) |>
sample_n(10, replace = TRUE) |>
pull(salary_usd) |>
signif(3) / 1000
print(dput(high_risk))
auto_risk <- "High"
high_risk <- ai_jobs |>
filter(automation_risk == auto_risk) |>
sample_n(10, replace = TRUE) |>
pull(salary_usd) |>
signif(3) / 1000
print(dput(high_risk))
auto_risk <- "High"
high_risk <- ai_jobs |>
filter(automation_risk == auto_risk) |>
sample_n(10, replace = TRUE) |>
pull(salary_usd) |>
signif(3) / 1000
print(dput(high_risk))
auto_risk <- "High"
high_risk <- ai_jobs |>
filter(automation_risk == auto_risk) |>
sample_n(10, replace = TRUE) |>
pull(salary_usd) |>
signif(3) / 1000
print(dput(high_risk))
auto_risk <- "High"
high_risk <- ai_jobs |>
filter(automation_risk == auto_risk) |>
sample_n(10, replace = TRUE) |>
pull(salary_usd) |>
signif(3) / 1000
print(dput(high_risk))
auto_risk <- "High"
high_risk <- ai_jobs |>
filter(automation_risk == auto_risk) |>
sample_n(10, replace = TRUE) |>
pull(salary_usd) |>
signif(3) / 1000
print(dput(high_risk))
auto_risk <- "High"
high_risk <- ai_jobs |>
filter(automation_risk == auto_risk) |>
sample_n(10, replace = TRUE) |>
pull(salary_usd) |>
signif(3) / 1000
print(dput(high_risk))
auto_risk <- "High"
high_risk <- ai_jobs |>
filter(automation_risk == auto_risk) |>
sample_n(10, replace = TRUE) |>
pull(salary_usd) |>
signif(3) / 1000
print(dput(high_risk))
auto_risk <- "High"
high_risk <- ai_jobs |>
filter(automation_risk == auto_risk) |>
sample_n(10, replace = TRUE) |>
pull(salary_usd) |>
signif(3) / 1000
print(dput(high_risk))
source("~/Documents/UCL/Teaching/BSSC0021_25/Code/Week4/sampling-exercise.R", echo=TRUE)
auto_risk <- "High"
high_risk <- ai_jobs |>
filter(automation_risk == auto_risk) |>
sample_n(10, replace = TRUE) |>
pull(salary_usd) |>
signif(3) / 1000
print(dput(high_risk))
auto_risk <- "High"
high_risk <- ai_jobs |>
filter(automation_risk == auto_risk) |>
sample_n(10, replace = TRUE) |>
pull(salary_usd) |>
signif(3) / 1000
print(dput(high_risk))
auto_risk <- "High"
high_risk <- ai_jobs |>
filter(automation_risk == auto_risk) |>
sample_n(10, replace = TRUE) |>
pull(salary_usd) |>
signif(3) / 1000
print(dput(high_risk))
auto_risk <- "High"
high_risk <- ai_jobs |>
filter(automation_risk == auto_risk) |>
sample_n(10, replace = TRUE) |>
pull(salary_usd) |>
signif(3) / 1000
print(dput(high_risk))
auto_risk <- "High"
high_risk <- ai_jobs |>
filter(automation_risk == auto_risk) |>
sample_n(10, replace = TRUE) |>
pull(salary_usd) |>
signif(3) / 1000
print(dput(high_risk))
auto_risk <- "High"
high_risk <- ai_jobs |>
filter(automation_risk == auto_risk) |>
sample_n(10, replace = TRUE) |>
pull(salary_usd) |>
signif(3) / 1000
print(dput(high_risk))
auto_risk <- "High"
high_risk <- ai_jobs |>
filter(automation_risk == auto_risk) |>
sample_n(10, replace = TRUE) |>
pull(salary_usd) |>
signif(3) / 1000
print(dput(high_risk))
auto_risk <- "High"
high_risk <- ai_jobs |>
filter(automation_risk == auto_risk) |>
sample_n(10, replace = TRUE) |>
pull(salary_usd) |>
signif(3) / 1000
print(dput(high_risk))
auto_risk <- "High"
high_risk <- ai_jobs |>
filter(automation_risk == auto_risk) |>
sample_n(10, replace = TRUE) |>
pull(salary_usd) |>
signif(3) / 1000
print(dput(high_risk))
auto_risk <- "High"
high_risk <- ai_jobs |>
filter(automation_risk == auto_risk) |>
sample_n(10, replace = TRUE) |>
pull(salary_usd) |>
signif(3) / 1000
print(dput(high_risk))
source("~/Documents/UCL/Teaching/BSSC0021_25/Code/Week4/sampling-exercise.R", echo=TRUE)
source("~/Documents/UCL/Teaching/BSSC0021_25/Code/Week4/sampling-exercise.R", echo=TRUE)
library(tidyverse)
library(tidyverse)
# Input the values of the samples
sample_1 <- c(83.2, 82.6, 82.6, 82.6, 93.2, 94, 94, 48.5, 33.6, 33.6)
sample_2 <- c(88, 48, 23, 23, 23, 23, 23, 23, 23, 23)
sample_3 <- c(128, 53.7, 70.9, 75.2, 84.9, 91.2, 70.2, 82, 88.8, 82)
sample_4 <- c(122, 54, 101, 93.2, 89.4, 64.9, 68.3, 97.7, 77.7, 123)
sample_5 <- c(92.2, 82, 97.7, 48.5, 94, 70.6, 105, 60.7, 65.1, 82.3)
sample_6 <- c(91.2, 110, 57.7, 48.4, 122, 65.5, 86.5, 62.7, 62.7, 85.6)
sample_7 <- c(87.5, 72.8, 84.8, 56.5, 64.9, 42.2, 62.8, 54.1, 84.4, 89.7)
sample_8 <- c(78.8, 48.5, 54, 70.4, 43.8, 65.5, 78.8, 43.8, 113, 123)
sample_9 <- c(89.5, 125, 94, 92.4, 70, 99, 111, 96.9, 64.2, 63.7)
sample_10 <- c(102, 90.8, 110, 123, 79.4, 77.9, 82.3, 92.6, 90.8, 113)
sample_11 <- c(86.6, 83, 58.9, 101, 54.9, 96.8, 84.8, 60.4, 84, 83.3)
sample_12 <- c(63.7, 102, 84.3, 54.1, 71.6, 122, 40.8, 63.7, 84.4, 90.9)
sample_13 <- c(123, 93.5, 68.3, 97.3, 53.1, 50.2, 130, 48.5, 56.5, 65.1)
sample_14 <- c(109, 85.6, 54.9, 62.7, 30.3, 87.1, 94, 111, 54.1, 54.3)
sample_15 <- c(109, 44.2, 99.3, 58.5, 77, 86.2, 125, 128, 79.1, 98.2)
sample_16 <- c(41.8, 122, 70.6, 86.3, 83.7, 84.3, 82.9, 41.3, 72.7, 98.2)
sample_17 <- c(63.7, 89.8, 101, 70.2, 68.4, 77.9, 105, 53.1, 112, 55.8)
sample_18 <- c(48.8, 86.5, 67.5, 84.5, 97.6, 92, 60.7, 108, 84.3, 58.5)
sample_19 <- c(92.6, 82.3, 57.1, 57.1, 82, 62.7, 62.7, 82, 82, 77)
sample_20 <- c(67, 64.5, 87.8, 84.5, 43.8, 67.2, 30.3, 107, 85.2, 67.2)
sample_21 <- c(66.8, 85.6, 123, 109, 97.7, 89.7, 51.9, 48.5, 81.7, 51.9)
sample_22 <- c(97.1, 85.2, 118, 56.5, 91.2, 91.8, 59.3, 111, 93.2, 75.9)
sample_23 <- c(111, 64.4, 137, 82.3, 94, 64.9, 39, 75.2, 91.2, 63.8)
sample_24 <- c(97.7, 50.2, 78.8, 119, 109, 119, 40.8, 72.8, 97.1, 102)
sample_25 <- c(58.9, 79.8, 91.8, 56.5, 46.1, 84.4, 71.2, 71.2, 86.2, 70.6)
sample_26 <- c(75.8, 73.8, 57.7, 129, 101, 71.2, 137, 135, 60.3, 77)
sample_27 <- c(56.5, 52.3, 99.3, 107, 75.9, 89.2, 70, 84.3, 66.8, 93.5)
sample_28 <- c(28.3, 90.8, 39, 82.3, 89.5, 58.1, 120, 74.7, 28.8, 117)
sample_29 <- c(97.7, 85.4, 91.1, 54.1, 109, 102, 82, 90.8, 63.7, 92.3)
sample_30 <- c(101, 68.3, 62.8, 65.5, 75.8, 93.8, 81.7, 72.8, 63.4, 109)
# Create a table with the samples and an id column
data <- tibble(
sample_1, sample_2, sample_3, sample_4, sample_5,
sample_6, sample_7, sample_8, sample_9, sample_10,
sample_11, sample_12, sample_13, sample_14, sample_15,
sample_16, sample_17, sample_18, sample_19, sample_20,
sample_21, sample_22, sample_23, sample_24, sample_25,
sample_26, sample_27, sample_28, sample_29, sample_30
) |>
gather(key = "sample", value = "value")
data # Look at the table
# Calculate the mean of each sample
sample_means <- data |>
group_by(sample) |>
summarise(mean = mean(value))
sample_means # Look at the means
#
# # Plot the sampling distribution
#
ggplot(sample_means, mapping = aes(x = mean)) +
geom_histogram() +
theme_minimal()
source("~/Documents/UCL/Teaching/BSSC0021_25/Code/Week4/sampling-exercise.R", echo=TRUE)
source("~/Documents/UCL/Teaching/BSSC0021_25/Code/Week4/sampling-exercise.R", echo=TRUE)
source("~/Documents/UCL/Teaching/BSSC0021_25/Code/Week4/sampling-exercise.R")
mean_1 <- mean(sample_1)
mean_2 <- mean(sample_2)
mean_1
tibble(mean_1, mean_2)
tibble(c(mean_1, mean_2))
tibble(mean = c(mean_1, mean_2))
source("~/Documents/UCL/Teaching/BSSC0021_25/Code/Week5/sampling-exercise.R")
source("~/Documents/UCL/Teaching/BSSC0021_25/Code/Week5/sampling-exercise.R", echo=TRUE)
renv::status()
renv::snapshot()
